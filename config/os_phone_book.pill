require "fileutils"
require 'yaml'
config_file_path = File.join(File.dirname(__FILE__), 'basic_config.yml')
application_config = YAML::load( File.read config_file_path )

rails_root = File.expand_path(File.dirname(__FILE__) + '/../')
app_name = "os_phone_book"
ENV["RAILS_ENV"] ||= "development"
user = ENV["RAILS_ENV"] == "production" ? application_config["user"] : ENV['USER']

pids_dir = File.join(rails_root, "tmp", "pids")
FileUtils.mkdir_p pids_dir
foreground = !ENV["FOREGROUND"].blank?
bluepill_logfile = File.join(rails_root, "log/bluepill.log")
workers = 1

Bluepill.application(app_name, :log_file => bluepill_logfile, :foreground => foreground) do |app|
  app.process("unicorn") do |process|
    pid_file = File.join(pids_dir, 'unicorn.pid')
    process.pid_file = pid_file

    process.start_command = "/usr/bin/env PID_FILE=#{pid_file} bundle exec unicorn_rails -Dc #{rails_root}/config/unicorn.rb -E #{ENV["RAILS_ENV"]}"
    process.stop_signals = [:quit, 30.seconds, :term, 5.seconds, :kill]

    process.start_grace_time = 15.seconds
    process.stop_grace_time = 45.seconds

    process.checks :cpu_usage, :every => 60.seconds, :below => 50, :times => 4
    process.checks :mem_usage, :every => 60.seconds, :below => 125.megabytes, :times => [3, 5]

    process.monitor_children do |child_process|
      child_process.checks :mem_usage, :every => 60.seconds, :below => 125.megabytes, :times => [3, 5]
      child_process.stop_command "kill -QUIT {{PID}}"
      child_process.stop_grace_time = 20.seconds
    end
  end
end
