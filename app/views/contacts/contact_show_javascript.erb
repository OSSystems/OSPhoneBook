var popupRemoveTimeout;

function requestFailure(response) {
    $("dialing-message").update("Unable to dial your requested number; Please contact your administrator.");
    $$("#dialing-close input")[0].value = "Close";
}

function dialPhoneNumber(url, dialingMessage) {
    new Ajax.Request(url, {
        method: 'get',
        onCreate: function(response) {
            createDialDialog(dialingMessage, "Cancel")
        },
        onSuccess: function(response) {
            // Prototype fires this callback even when there is a comm failure
            // between the browser and the server. So, use the response status
            // to assume it is a failure:
            if(response.status == 0) {
                requestFailure(response);
            } else {
                createDialDialog(response.responseText, "Cancel")
	        popupRemoveTimeout = setTimeout("Element.hide('dialing-background')",5000);
            }
            setUpHotkeys();
        },
        onFailure: function(response) {
            requestFailure(response);
            setUpHotkeys();
        }
    });
}

function pressStartKeys() {
    var keys = $$('.hotkey.start');
    var i;
    for(i=0; i<keys.length; i++) {
        keys[i].addClassName('pressed');
    }
    var keys = $$('.hotkey.activate');
    for(i=0; i<keys.length; i++) {
        keys[i].addClassName('expect-press');
    }
}

function clearPressedKeys() {
<% ContactsHelper::DIAL_OPTIONS.each do |key| %>
    <% break unless @dialing_options.include?(key) %>
        Hotkeys.remove('<%= key %>');
<% end %>
    Hotkeys.remove('d');
    var keys = $$('.hotkey');
    for(var i=0;i < keys.length; i++) {
        keys[i].removeClassName('pressed');
        keys[i].removeClassName('expect-press');
    }
}

function setUpHotkeys() {
    clearPressedKeys();
<% ContactsHelper::DIAL_OPTIONS.each do |key| %>
    <% break unless @dialing_options.include?(key) %>
    <% option = @dialing_options[key] %>
    Event.observe($('phone_<%= key %>'), 'click', function() {
        dialPhoneNumber('<%= option[:phone_path] %>', '<%= option[:dial_message] %>');
    });
<% end %>
    // hotkeys for quick dialing:
    Hotkeys.bind('d', function() {
        pressStartKeys();
        <% ContactsHelper::DIAL_OPTIONS.each do |key| %>
            <% break unless @dialing_options.include?(key) %>
            <% option = @dialing_options[key] %>
            Hotkeys.bind('<%= key %>', function() {
                dialPhoneNumber('<%= option[:phone_path] %>', '<%= option[:dial_message] %>');
            });
        <% end %>
        Event.observe(document, 'click', function() {
            setUpHotkeys();
        });
    });
}

function removeDialDialog() {
    var divBackground = $('dialing-background');
    if(divBackground) {
        clearTimeout(popupRemoveTimeout);
        $('close-popup-button').purge();
        divBackground.remove();
    }
}

function createDialDialog(message, buttonCaption) {
    var dialingMessage = new Element('p', {'id': 'dialing-message'});
    dialingMessage.update(message);

    var divPadding = new Element('div', {'class': 'padding'});
    var divCenterText = new Element('div', {'class': 'center-text'});
    divCenterText.update(dialingMessage);

    var closeButton = new Element('input', {'id': 'close-popup-button','type': 'button', 'value': buttonCaption});
    var divDialingClose = new Element('div', {'id': 'dialing-close'});
    divDialingClose.update(closeButton);

    var dialingPopUp = new Element('div', {'id': 'dialing-popup'});
    dialingPopUp.insert({bottom: divPadding});
    dialingPopUp.insert({bottom: divCenterText});
    dialingPopUp.insert({bottom: divDialingClose});

    var divBackground = new Element('div', {'id': 'dialing-background'});
    divBackground.insert({bottom: dialingPopUp});

    removeDialDialog();

    // remove pop-up when canceling
    Event.observe(closeButton, "click", function respondToClick(event) {
        removeDialDialog();
    });

    $('content').insert({bottom: divBackground});
    closeButton.focus();
}

Event.observe(document, 'dom:loaded', function() {
<% ContactsHelper::DIAL_OPTIONS.each do |key| %>
    <% break unless @dialing_options.include?(key) %>
    $('phone_<%= key %>').writeAttribute('href', '#');
    <% option = @dialing_options[key] %>
    Event.observe($('phone_<%= key %>'), 'click', function() {
          dialPhoneNumber('<%= option[:phone_path] %>', '<%= option[:dial_message] %>');
    });
<% end %>
    setUpHotkeys();
});
